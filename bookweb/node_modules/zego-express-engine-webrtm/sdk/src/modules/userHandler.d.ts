import { StateCenter } from '../stateCenter';
import { LiveRoomService } from '../service';
import { ZegoDataReport, ZegoLogger } from '../zego.entity';
export declare class UserHandler {
    private logger;
    private stateCenter;
    private dataReport;
    private service;
    private userQuerying;
    private lastUserQueryTime;
    private userTempList;
    private userSeq;
    private minUserSeq;
    private userList;
    private userSeqMergeMap;
    private userSeqMergeTimer;
    private userQueryTimer;
    private userListInterval;
    private userListMergeInterval;
    private anchor_info;
    constructor(logger: ZegoLogger, stateCenter: StateCenter, dataReport: ZegoDataReport, service: LiveRoomService);
    loginRsp(msg: any, lastRunState: number): void;
    patchUserList(msg: any): void;
    resetUserHandler(): void;
    private fetchUserList;
    private fetchUserListWithPage;
    private handleFetchUserListRsp;
    handlePushUserStateUpdateMsg(msg: {
        body: {
            user_actions: any;
            user_list_seq: number;
            room_id: string;
        };
    }): void;
    onUserStateUpdate(roomID: string, updateType: 'DELETE' | 'ADD', userList: {
        userID: string;
        userName: string;
    }[]): void;
    private mergeUserByUserSeq;
    private mergeUser;
    private handleMergeTimeout;
}
