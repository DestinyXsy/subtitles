export interface ZegoServerResponse {
    errorCode: number;
    extendedData?: string;
}
export interface ZegoBarrageMessageInfo {
    fromUser: ZegoUser;
    message: string;
    sendTime: number;
    messageID: string;
}
export interface ZegoBroadcastMessageInfo {
    fromUser: ZegoUser;
    message: string;
    sendTime: number;
    messageID: number;
}
export interface ZegoRTMEvent {
    roomUserUpdate: RoomUserUpdateCallBack;
    roomStateUpdate: RoomStateUpdateCallBack;
    roomOnlineUserCountUpdate: RoomOnlineUserCountUpdateCallBack;
    IMRecvBroadcastMessage: IMRecvBroadcastMessageCallBack;
    IMRecvBarrageMessage: IMRecvBarrageMessageCallBack;
    IMRecvCustomCommand: IMRecvCustomCommandCallBack;
    roomExtraInfoUpdate: roomExtraInfoUpdateCallBack;
    tokenWillExpire: tokenWillExpireCallBack;
}
export interface ZegoLogConfig {
    logLevel?: 'debug' | 'info' | 'warn' | 'error' | 'report' | 'disable';
    remoteLogLevel?: 'debug' | 'info' | 'warn' | 'error' | 'disable';
    logURL?: string;
}
export interface ZegoRoomConfig {
    userUpdate?: boolean;
    maxMemberCount?: number;
}
export interface ZegoRoomExtraInfo {
    key: string;
    value: string;
    updateUser: ZegoUser;
    updateTime: number;
}
export interface ZegoUser {
    userID: string;
    userName?: string;
}
declare type IMRecvBarrageMessageCallBack = (roomID: string, messageInfo: ZegoBarrageMessageInfo[]) => void;
declare type IMRecvBroadcastMessageCallBack = (roomID: string, chatData: ZegoBroadcastMessageInfo[]) => void;
declare type IMRecvCustomCommandCallBack = (roomID: string, fromUser: ZegoUser, command: string) => void;
declare type RoomOnlineUserCountUpdateCallBack = (roomID: string, count: number) => void;
declare type RoomStateUpdateCallBack = (roomID: string, state: 'DISCONNECTED' | 'CONNECTING' | 'CONNECTED', errorCode: number, extendedData: string) => void;
declare type RoomUserUpdateCallBack = (roomID: string, updateType: 'DELETE' | 'ADD', userList: ZegoUser[]) => void;
declare type roomExtraInfoUpdateCallBack = (roomID: string, roomExtraInfoList: ZegoRoomExtraInfo[]) => void;
declare type tokenWillExpireCallBack = (roomID: string) => void;
export {};
